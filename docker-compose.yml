services:
  postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-authdb}
      POSTGRES_USER: ${POSTGRES_USER:-authuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-authpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-authuser} -d ${POSTGRES_DB:-authdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  vault:
    image: vault:1.13.3
    container_name: auth-vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN:-myroot}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    networks:
      - auth-network
    volumes:
      - vault_data:/vault/data
    command: ["vault", "server", "-dev", "-dev-listen-address=0.0.0.0:8200"]

  redis:
    image: redis:7-alpine
    container_name: auth-redis
    ports:
      - "6379:6379"
    networks:
      - auth-network
    volumes:
      - redis_data:/data

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: auth-keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-authdb}
      KC_DB_USERNAME: ${POSTGRES_USER:-authuser}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-authpass}
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
    ports:
      - "8080:8080"
    networks:
      - auth-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command: start-dev --import-realm

  app:
    build: .
    container_name: auth-app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-authuser}:${POSTGRES_PASSWORD:-authpass}@postgres:5432/${POSTGRES_DB:-authdb}
      VAULT_URL: http://vault:8200
      VAULT_TOKEN: ${VAULT_TOKEN:-myroot}
      REDIS_URL: redis://redis:6379
      KEYCLOAK_URL: ${KEYCLOAK_URL:-http://keycloak:8080}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-ashid-dev}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      vault:
        condition: service_started
      redis:
        condition: service_started
      keycloak:
        condition: service_started
    networks:
      - auth-network
    volumes:
      - ./app:/app/app
      - ./migrations:/app/migrations

networks:
  auth-network:
    driver: bridge

volumes:
  postgres_data:
  vault_data:
  redis_data:
